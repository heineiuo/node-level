name: Rippledb CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' ||
      !startsWith(github.event.pull_request.head.label, 'heineiuo:')

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build
        run: |
          npm install
          npm run build
          npm run build:tsc
          npm run build:fixture
          npm run build:bench
        env:
          CI: true

      - name: Post Ripple Deno
        if: |
          github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        env:
          RIPPLEDBBOT_PAT: ${{ secrets.RIPPLEDBBOT_PAT }}
        run: |
          git clone --depth 1 https://${RIPPLEDBBOT_PAT}@github.com/heineiuo/rippledb-deno.git rippledb-deno
          npm run build:scripts
          npm run build:deno
          cd rippledb-deno
          git config user.email "heineiuo@gmail.com"
          git config user.name "heineiuo"
          git add .
          git diff-index --quiet HEAD || git commit --message "Update Rippledb Deno"
          git push origin master
          cd ..

      - name: Benchmarks
        run: |
          npm run bench --total=10000 --runner=10
        env:
          CI: true

      - name: Tests
        run: |
          npx jest tests --coverage
        env:
          CI: true

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}

      - name: Create Changelogs
        if: |
          github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        id: changelog
        uses: heineiuo/create-changelogs@master

      - name: Tag rippledb-deno
        if: |
          github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        run: |
          cd rippledb-deno
          echo 'new tag ${TAG_NAME}'
          git tag ${TAG_NAME}
          git push
          git push --follow-tags
          cd ..
        env:
          TAG_NAME: ${{ steps.changelog.outputs.tag_name }}

      - name: Publish to NPM
        if: |
          github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        run: |
          echo '//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}' > ~/.npmrc
          npm publish

      - name: Create Release
        if: |
          github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.changelog.outputs.changelogs }}
          draft: false
          prerelease:
            ${{ steps.changelog.outputs.release_type == 'prerelease' }}
